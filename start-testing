#!/bin/bash -l

## the input would be like
## ./start-testing -a <vasp> -c <azure> -q <vasp> -j <small>


#
# Defaults
#
QUEUENAME_DEF=defaultq
NODES_DEF=1
TASKSPERNODE_DEF=16
JOBTYPE_DEF=small
SCHEDTYPE_DEF=slurm
TESTDIR_DEF=/scratch/$USER/test-framework

STARTDIR=$(pwd)


#
# Usage function
#
usage() {
    echo "Usage: $0 -a application-name -c cluster-name [-q queue-name] [-N number-of-nodes] [-t tasks-per-node] [-j job-type] [-s scheduler-name] [-p scratch-path] [-h help-version]" 1>&2;
    exit 1;
}
#
# Use getopts to get arguments
#
while getopts ":a:q:N:c:t:v:j:s:p:" opt; do
    case $opt in
        a)
            APPNAME=$OPTARG
            ;;
        q)
            QUEUENAME=$OPTARG
            ;;
        N)
            NODES=$OPTARG
            ;;
        c)
            CLUSTER=$OPTARG
            ;;
        t)
            TASKSPERNODE=$OPTARG
            ;;
        j)
            JOBTYPE=$OPTARG
            ;;
        s)
            SCHEDTYPE=$OPTARG
            ;;
        p)
            TESTDIR=$OPTARG
            ;;
        h)
            usage
            exit 1
            ;;
        [?])
            echo "Invalid option: -$OPTARG"
            usage
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument."
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${APPNAME}" ] || [ -z "${CLUSTER}" ] ; then
    usage
    exit 1
fi

if [ -z "${QUEUENAME}" ]; then
    QUEUENAME=$QUEUENAME_DEF
fi

if [ -z "${JOBTYPE}" ]; then
    JOBTYPE=$JOBTYPE_DEF
fi

if [ -z "${NODES}" ]; then
    case $JOBTYPE in
    small)
            NODES=$NODES_DEF
            ;;
    medium)
            NODES=$(($NODES_DEF*2))
            ;;
    large)
            NODES=$(($NODES_DEF*4))
            ;;
    *)
            NODES=$NODES_DEF
            ;;
    esac
fi

if [ -z "${TASKSPERNODE}" ]; then
    TASKSPERNODE=$TASKSPERNODE_DEF
fi

if [ -z "${SCHEDTYPE}" ]; then
    SCHEDTYPE=$SCHEDTYPE_DEF
fi

if [ -z "${TESTDIR}" ]; then
    TESTDIR=$TESTDIR_DEF
fi

submit_job() {
    APPNAME=$1
    CLUSTER=$2
    QUEUENAME=$3
    NODES=$4
    TASKSPERNODE=$5
    JOBTYPE=$6
    STARTDIR=$7
    TESTDIR=$8
    SCHEDTYPE=$9

    TOTAL_CORES=$(($NODES*$TASKSPERNODE))

    ./$APPNAME/_$SCHEDTYPE $APPNAME $CLUSTER $QUEUENAME $TOTAL_CORES $JOBTYPE $STARTDIR $TESTDIR $TASKSPERNODE
}

print_job_details(){
    echo  "---------------------------------"
    echo "|  Variable    |   Value "
    echo  "---------------------------------"
    echo "| APPNAME      |    $1 "
    echo "| CLUSTER      |    $2 "
    echo "| QUEUENAME    |    $3 "
    echo "| NODES        |    $4 "
    echo "| TASKSPERNODE |    $5 "
    echo "| JOBTYPE      |    $6 "
    echo "| STARTDIR     |    $7 "
    echo "| TESTDIR      |    $8 "
    echo "| SCHEDTYPE    |    $9 "
    echo  "---------------------------------"
    #echo "Submission command:"
    #echo "./$APPNAME/_$SCHEDTYPE $APPNAME $CLUSTER $QUEUENAME $TOTAL_CORES $JOBTYPE $STARTDIR $TESTDIR $TASKSPERNODE"
}


print_job_details $APPNAME $CLUSTER $QUEUENAME $NODES $TASKSPERNODE $JOBTYPE $STARTDIR $TESTDIR $SCHEDTYPE

submit_job $APPNAME $CLUSTER $QUEUENAME $NODES $TASKSPERNODE $JOBTYPE $STARTDIR $TESTDIR $SCHEDTYPE