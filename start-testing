#!/bin/bash -l

#
# Defaults
#
export QUEUENAME_DEF=defaultq
export THISDIR=$(dirname "$0")

#
# Usage function
#
usage() {
    echo "Usage: $0 [-a application-name] [-c cluster-name] [-q queue-name] [-N number-of-nodes] [-t tasks-per-node] [-h help-version]" 1>&2;
    exit 1;
}

#
# Use getopts to get arguments
#

while getopts ":a:q:N:c:t:v:" opt; do
    case $opt in
        a)
            APPNAME=$OPTARG
            ;;
        q)
            QUEUENAME=$OPTARG
            ;;
        N)
            NODES=$OPTARG
            ;;
        c)
            export CLUSTER=$OPTARG
            ;;
        t)
            TASKSPERNODE=$OPTARG
            ;;
        h)
            usage
            exit 1
            ;;
        [?])
            echo "Invalid option: -$OPTARG"
            usage
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument."
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${APPNAME}" ] || [ -z "${CLUSTER}" ] ]; then
    usage
    exit 1
fi


if [ -z "${QUEUENAME}" ]; then
    export QUEUENAME=$QUEUENAME_DEF
fi

#
# replace function
#
## replace $original $replacement $path

replace(){
    sed -i -e "s/$1/$2/g" $3

}

#
# Submission function
#
## SLURM_SUBMIT $APPNAME $JOBNAME $NPAR $CPUNUM $QUEUENAME $WALLTIME

SLURM_SUBMIT(){
    # variables
    APPNAME=$1
    JOBNAME=$2
    NPAR=$3
    CPUNUM=$4
    QUEUENAME=$5
    WALLTIME=$6

    JOBDIR=$THISDIR/$APPNAME/$CLUSTER/$JOBNAME/NPAR-$NPAR/$CPUNUM
    mkdir -p $JOBDIR && cd $JOBDIR
    echo "rm -rf $JOBDIR/*"
    cp $THISDIR/$APPNAME/_orig/$JOBNAME/* $JOBDIR/
    cp $THISDIR/$APPNAME/_slurm $JOBDIR/slurm
    # replace the necessary changes
    replace @JOBNAME@ $JOBNAME slurm
    replace @CLUSTER@ $CLUSTER slurm
    replace @NPAR@ NPAR-$NPAR slurm
    replace @CPUNUM@ $CPUNUM slurm
    replace @WALLTIME@ $WALLTIME slurm
    replace @QUEUENAME@ $QUEUENAME slurm

    replace @NPAR@ $NPAR INCAR
    sbatch slurm
}

. $THISDIR/$APPNAME/_scenario