#!/bin/bash -l

# The following script is optimized to be used on VASP v5.4.1

APPNAME=vasp
APPDATE=05Feb16
VERSION=$1
COMPILER=$2
COMPILERVERSION=$3
COMPILERBUILD=$4
COMPILERBUILDVERSION=$5
SRCDIR=/opt/sources/$APPNAME/$VERSION
BUILDDIR=/opt/builds

cd "${BUILDDIR}"
rm -fr $APPNAME-$VERSION-$COMPILER-$COMPILERVERSION
tar xfz "${SRCDIR}/$APPNAME.$VERSION.$APPDATE.tar.gz"
mv $APPNAME.$VERSION $APPNAME-$VERSION-$COMPILER-$COMPILERVERSION
cd $APPNAME-$VERSION-$COMPILER-$COMPILERVERSION

# applying patch 0
PATCHDATE=14032016
PATCHNAME="patch.$VERSION.$PATCHDATE"
cp ${SRCDIR}/$PATCHNAME.gz .
gunzip $PATCHNAME.gz
patch -p0 < $PATCHNAME

# applying patch 1
PATCHDATE=03082016
PATCHNAME="patch.$VERSION.$PATCHDATE"
cp ${SRCDIR}/$PATCHNAME.gz .
gunzip $PATCHNAME.gz
patch -p1 < $PATCHNAME

# Building WANNIER library
WANNAME=wannier90
WANVERSION=1.2

cd src
tar xfz "${SRCDIR}/$WANNAME-$WANVERSION.tar.gz"
cd $WANNAME-$WANVERSION
#cp config/make.sys.ifort make.sys

echo 'F90 = ifort
FCOPTS = -O2 -xHost
LDOPTS = -O2 -xHost
LIBDIR = /opt/share/intel/2015/mkl/lib/intel64
LIBS   =  -lmkl_core -lmkl_intel_lp64 -lmkl_sequential -lpthread ' > make.sys

module load $COMPILER/$COMPILERVERSION/$COMPILERBUILD-$COMPILERBUILDVERSION

make lib

cd ../..;
echo '
CPP_OPTIONS=    -DMPI -DHOST=\"ResearchComputing_Intel\" -DIFC \
                -DCACHE_SIZE=12000 -DPGF90 -Davoidalloc \
                -DMPI_BLOCK=8000 -DscaLAPACK -Duse_collective \
                -DnoAugXCmeta -Duse_bse_te \
                -Duse_shmem -Dtbdyn \
                -DVASP2WANNIER90 -DRPROMU_DGEMV -DRACCMU_DGEMV -DnoSTOPCAR -Ddo_loops
CPP        = fpp -f_com=no -free -w0  $*$(FUFFIX) $*$(SUFFIX) $(CPP_OPTIONS)

FC         = mpifort
FCL        = mpifort -mkl=sequential

FREE       = -free -names lowercase

FFLAGS     = -assume byterecl -xHost
OFLAG      = -O2 -ip -xHost
OFLAG_IN   = $(OFLAG)
DEBUG      = -O0

MKL_PATH   = $(MKLROOT)/lib/intel64
BLAS       =
LAPACK     =
BLACS      = $(MKL_PATH)/libmkl_blacs_openmpi_lp64.a
SCALAPACK  = $(MKL_PATH)/libmkl_scalapack_lp64.a $(BLACS)

OBJECTS    = fftmpiw.o fftmpi_map.o fftw3d.o fft3dlib.o \
             $(MKLROOT)/interfaces/fftw3xf/libfftw3xf_intel.a
INCS       =-I$(MKLROOT)/include/fftw

LLIBS      = ../../src/wannier90-1.2/libwannier.a $(SCALAPACK) $(LAPACK) $(BLAS)

OBJECTS_O1 += fft3dfurth.o fftw3d.o fftmpi.o fftmpiw.o
OBJECTS_O2 += fft3dlib.o

CPP_LIB    = $(CPP) -DLONGCHAR
FC_LIB     = $(FC)
CC_LIB     = mpicc
CFLAGS_LIB = -O
FFLAGS_LIB = -O1
FREE_LIB   = $(FREE)

OBJECTS_LIB= linpack_double.o getshmem.o

SRCDIR     = ../../src
BINDIR     = ../../bin
' > makefile.include

echo "Please make sure that you have compiled /opt/share/intel/2015/composerxe/mkl/interfaces/fftw3xf , if not:
        cd /opt/share/intel/2015/composerxe/mkl/interfaces/fftw3xf && make libintel64"
echo "Press any key to continue.." && read 

make all
mkdir -p /opt/share/$APPNAME/$VERSION/$COMPILER-$COMPILERVERSION-$COMPILERBUILD-$COMPILERBUILDVERSION
cp bin/* /opt/share/$APPNAME/$VERSION/$COMPILER-$COMPILERVERSION-$COMPILERBUILD-$COMPILERBUILDVERSION
cd /opt/share/$APPNAME/$VERSION/$COMPILER-$COMPILERVERSION-$COMPILERBUILD-$COMPILERBUILDVERSION

# create KAUST friendly excutables
ln -s vasp_std vasp
ln -s vasp_gam vasp-gamma
ln -s vasp_ncl vasp-so